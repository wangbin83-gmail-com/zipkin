#!/usr/bin/env bash

##############################################################################
##
##  zipkin-collector-service start up script for UN*X
##
##############################################################################

# Add default JVM options here. You can also use JAVA_OPTS and ZIPKIN_COLLECTOR_SERVICE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

APP_NAME="zipkin-collector-service"
APP_BASE_NAME=`basename "$0"`

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn ( ) {
    echo "$*"
}

die ( ) {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
esac

# For Cygwin, ensure paths are in UNIX format before anything is touched.
if $cygwin ; then
    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
fi

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/.." >&-
APP_HOME="`pwd -P`"
cd "$SAVED" >&-

CLASSPATH=$APP_HOME/lib/zipkin-collector-service-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/scala-library-2.10.5.jar:$APP_HOME/lib/hadoop-yarn-common-2.4.0.jar:$APP_HOME/lib/riffle-0.1-dev.jar:$APP_HOME/lib/zookeeper-3.4.6.jar:$APP_HOME/lib/jgrapht-jdk1.6-0.8.1.jar:$APP_HOME/lib/janino-2.7.5.jar:$APP_HOME/lib/commons-codec-1.6.jar:$APP_HOME/lib/zipkin-collector-core-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/kryo-2.21.jar:$APP_HOME/lib/zipkin-collector-scribe-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/zipkin-receiver-kafka-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/zipkin-cassandra-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/zipkin-redis-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/zipkin-anormdb-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/jline-0.9.94.jar:$APP_HOME/lib/zipkin-common-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/zipkin-scrooge-1.2.0-SNAPSHOT-idl.jar:$APP_HOME/lib/zipkin-scrooge-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/commons-digester-1.8.jar:$APP_HOME/lib/commons-beanutils-core-1.8.0.jar:$APP_HOME/lib/algebird-core_2.10-0.10.2.jar:$APP_HOME/lib/httpclient-4.2.5.jar:$APP_HOME/lib/twitter-server_2.10-1.12.0.jar:$APP_HOME/lib/xz-1.0.jar:$APP_HOME/lib/ostrich_2.10-9.10.0.jar:$APP_HOME/lib/finagle-core_2.10-6.27.0.jar:$APP_HOME/lib/finagle-serversets_2.10-6.27.0.jar:$APP_HOME/lib/hadoop-yarn-client-2.4.0.jar:$APP_HOME/lib/finagle-thrift_2.10-6.27.0.jar:$APP_HOME/lib/util-zk-common_2.10-6.26.0.jar:$APP_HOME/lib/finagle-zipkin_2.10-6.27.0.jar:$APP_HOME/lib/hadoop-yarn-server-common-2.4.0.jar:$APP_HOME/lib/scrooge-core_2.10-3.20.0.jar:$APP_HOME/lib/util-core_2.10-6.26.0.jar:$APP_HOME/lib/util-zk_2.10-6.26.0.jar:$APP_HOME/lib/hadoop-yarn-server-nodemanager-2.4.0.jar:$APP_HOME/lib/candidate-0.0.75.jar:$APP_HOME/lib/scrooge-serializer_2.10-3.20.0.jar:$APP_HOME/lib/jaxb-api-2.2.2.jar:$APP_HOME/lib/zipkin-collector-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/zipkin-zookeeper-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/kafka_2.10-0.8.2.1.jar:$APP_HOME/lib/commons-io-1.3.2.jar:$APP_HOME/lib/snappy-0.3.jar:$APP_HOME/lib/hadoop-client-2.4.0.jar:$APP_HOME/lib/util-app_2.10-6.26.0.jar:$APP_HOME/lib/util-logging_2.10-6.26.0.jar:$APP_HOME/lib/scalding-core_2.10-0.15.0.jar:$APP_HOME/lib/finagle-redis_2.10-6.27.0.jar:$APP_HOME/lib/servlet-api-2.5.jar:$APP_HOME/lib/anorm_2.10-2.3.7.jar:$APP_HOME/lib/HikariCP-java6-2.3.8.jar:$APP_HOME/lib/sqlite-jdbc-3.7.2.jar:$APP_HOME/lib/junit-3.8.1.jar:$APP_HOME/lib/util-events_2.10-6.26.0.jar:$APP_HOME/lib/jersey-core-1.9.jar:$APP_HOME/lib/finagle-ostrich4_2.10-6.27.0.jar:$APP_HOME/lib/finagle-exception_2.10-6.27.0.jar:$APP_HOME/lib/util-function_2.10-6.26.0.jar:$APP_HOME/lib/guice-3.0.jar:$APP_HOME/lib/jersey-server-1.9.jar:$APP_HOME/lib/jersey-json-1.9.jar:$APP_HOME/lib/jersey-guice-1.9.jar:$APP_HOME/lib/jsr305-2.0.1.jar:$APP_HOME/lib/commons-compiler-2.7.5.jar:$APP_HOME/lib/reflectasm-1.07-shaded.jar:$APP_HOME/lib/minlog-1.2.jar:$APP_HOME/lib/objenesis-1.2.jar:$APP_HOME/lib/commons-beanutils-1.7.0.jar:$APP_HOME/lib/httpcore-4.2.4.jar:$APP_HOME/lib/jersey-client-1.9.jar:$APP_HOME/lib/jettison-1.1.jar:$APP_HOME/lib/stax-api-1.0-2.jar:$APP_HOME/lib/activation-1.1.jar:$APP_HOME/lib/aopalliance-1.0.jar:$APP_HOME/lib/cglib-2.2.1-v20090111.jar:$APP_HOME/lib/asm-3.1.jar:$APP_HOME/lib/jaxb-impl-2.2.3-1.jar:$APP_HOME/lib/jackson-jaxrs-1.8.3.jar:$APP_HOME/lib/jackson-xc-1.8.3.jar:$APP_HOME/lib/asm-4.0.jar:$APP_HOME/lib/slf4j-api-1.7.10.jar:$APP_HOME/lib/metrics-core-2.2.0.jar:$APP_HOME/lib/kafka-clients-0.8.2.1.jar:$APP_HOME/lib/jopt-simple-3.2.jar:$APP_HOME/lib/zkclient-0.3.jar:$APP_HOME/lib/hadoop-common-2.4.0.jar:$APP_HOME/lib/hadoop-hdfs-2.4.0.jar:$APP_HOME/lib/hadoop-mapreduce-client-app-2.4.0.jar:$APP_HOME/lib/hadoop-yarn-api-2.4.0.jar:$APP_HOME/lib/JavaEWAH-0.6.6.jar:$APP_HOME/lib/compiler-0.8.12.1.jar:$APP_HOME/lib/hadoop-mapreduce-client-core-2.4.0.jar:$APP_HOME/lib/hadoop-mapreduce-client-jobclient-2.4.0.jar:$APP_HOME/lib/hadoop-annotations-2.4.0.jar:$APP_HOME/lib/scalding-args_2.10-0.15.0.jar:$APP_HOME/lib/scalding-date_2.10-0.15.0.jar:$APP_HOME/lib/scalding-serialization_2.10-0.15.0.jar:$APP_HOME/lib/maple-0.15.0.jar:$APP_HOME/lib/cascading-core-2.6.1.jar:$APP_HOME/lib/finagle-http_2.10-6.27.0.jar:$APP_HOME/lib/finagle-httpx_2.10-6.27.0.jar:$APP_HOME/lib/cascading-local-2.6.1.jar:$APP_HOME/lib/cascading-hadoop-2.6.1.jar:$APP_HOME/lib/finagle-httpx-compat_2.10-6.27.0.jar:$APP_HOME/lib/chill_2.10-0.6.0.jar:$APP_HOME/lib/chill-hadoop-0.6.0.jar:$APP_HOME/lib/chill-algebird_2.10-0.6.0.jar:$APP_HOME/lib/slf4j-log4j12-1.7.5.jar:$APP_HOME/lib/chill-java-0.6.0.jar:$APP_HOME/lib/bijection-core_2.10-0.8.0.jar:$APP_HOME/lib/scala-arm_2.10-1.4.jar:$APP_HOME/lib/joda-time-2.3.jar:$APP_HOME/lib/joda-convert-1.6.jar:$APP_HOME/lib/javassist-3.18.2-GA.jar:$APP_HOME/lib/commons-lang-2.6.jar:$APP_HOME/lib/netty-3.10.1.Final.jar:$APP_HOME/lib/args-0.2.35.jar:$APP_HOME/lib/io-0.0.65.jar:$APP_HOME/lib/io-json-0.0.51.jar:$APP_HOME/lib/io-thrift-0.0.64.jar:$APP_HOME/lib/dynamic-host-set-0.0.53.jar:$APP_HOME/lib/service-thrift-1.0.54.jar:$APP_HOME/lib/slf4j-jdk14-1.7.7.jar:$APP_HOME/lib/gson-2.2.4.jar:$APP_HOME/lib/util-jvm_2.10-6.26.0.jar:$APP_HOME/lib/args-apt-0.1.33.jar:$APP_HOME/lib/args-core-0.1.33.jar:$APP_HOME/lib/jackson-annotations-2.4.4.jar:$APP_HOME/lib/log4j-1.2.17.jar:$APP_HOME/lib/util-registry_2.10-6.26.0.jar:$APP_HOME/lib/paranamer-2.6.jar:$APP_HOME/lib/scala-compiler-2.10.5.jar:$APP_HOME/lib/jackson-core-2.4.4.jar:$APP_HOME/lib/javax.inject-1.jar:$APP_HOME/lib/scala-reflect-2.10.5.jar:$APP_HOME/lib/commons-collections-3.2.1.jar:$APP_HOME/lib/base-0.0.112.jar:$APP_HOME/lib/jackson-databind-2.4.4.jar:$APP_HOME/lib/lz4-1.2.0.jar:$APP_HOME/lib/snappy-java-1.1.1.6.jar:$APP_HOME/lib/commons-cli-1.2.jar:$APP_HOME/lib/jackson-module-scala_2.10-2.4.4.jar:$APP_HOME/lib/commons-math3-3.1.1.jar:$APP_HOME/lib/guava-16.0.1.jar:$APP_HOME/lib/xmlenc-0.52.jar:$APP_HOME/lib/commons-httpclient-3.1.jar:$APP_HOME/lib/commons-io-2.4.jar:$APP_HOME/lib/quantity-0.0.96.jar:$APP_HOME/lib/commons-net-3.1.jar:$APP_HOME/lib/commons-logging-1.1.3.jar:$APP_HOME/lib/collections-0.0.106.jar:$APP_HOME/lib/client-0.0.76.jar:$APP_HOME/lib/commons-configuration-1.6.jar:$APP_HOME/lib/jackson-core-asl-1.8.8.jar:$APP_HOME/lib/group-0.0.87.jar:$APP_HOME/lib/util-0.0.118.jar:$APP_HOME/lib/jackson-mapper-asl-1.8.8.jar:$APP_HOME/lib/libthrift-0.5.0-1.jar:$APP_HOME/lib/avro-1.7.4.jar:$APP_HOME/lib/protobuf-java-2.5.0.jar:$APP_HOME/lib/net-util-0.0.97.jar:$APP_HOME/lib/util-system-mocks-0.0.101.jar:$APP_HOME/lib/util-eval_2.10-6.26.0.jar:$APP_HOME/lib/util-executor-service-shutdown-0.0.64.jar:$APP_HOME/lib/jdk-logging-0.0.76.jar:$APP_HOME/lib/scala-json_2.10-3.0.2.jar:$APP_HOME/lib/hadoop-auth-2.4.0.jar:$APP_HOME/lib/stats-0.0.112.jar:$APP_HOME/lib/commons-compress-1.4.1.jar:$APP_HOME/lib/util-collection_2.10-6.26.0.jar:$APP_HOME/lib/stat-registry-0.0.53.jar:$APP_HOME/lib/stats-provider-0.0.88.jar:$APP_HOME/lib/application-action-0.0.87.jar:$APP_HOME/lib/util-sampler-0.0.75.jar:$APP_HOME/lib/stat-0.0.68.jar:$APP_HOME/lib/util-hashing_2.10-6.26.0.jar:$APP_HOME/lib/util-stats_2.10-6.26.0.jar:$APP_HOME/lib/util-codec_2.10-6.26.0.jar:$APP_HOME/lib/jetty-util-6.1.26.jar:$APP_HOME/lib/hadoop-mapreduce-client-common-2.4.0.jar:$APP_HOME/lib/jsr166e-1.0.0.jar:$APP_HOME/lib/hadoop-mapreduce-client-shuffle-2.4.0.jar:$APP_HOME/lib/server-set-1.0.103.jar:$APP_HOME/lib/finagle-test_2.10-6.27.0.jar:$APP_HOME/lib/zipkin-hbase-1.2.0-SNAPSHOT.jar:$APP_HOME/lib/hbase-client-0.98.6-cdh5.3.1.jar:$APP_HOME/lib/hbase-common-0.98.6-cdh5.3.1.jar:$APP_HOME/lib/hbase-protocol-0.98.6-cdh5.3.1.jar:$APP_HOME/lib/hadoop-annotations-2.5.0-cdh5.3.1.jar:$APP_HOME/lib/hadoop-auth-2.5.0-cdh5.3.1.jar:$APP_HOME/lib/hadoop-common-2.5.0-cdh5.3.1.jar:$APP_HOME/lib/htrace-core-2.04.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD="java"
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Increase the maximum file descriptors if we can.
if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
    MAX_FD_LIMIT=`ulimit -H -n`
    if [ $? -eq 0 ] ; then
        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
            MAX_FD="$MAX_FD_LIMIT"
        fi
        ulimit -n $MAX_FD
        if [ $? -ne 0 ] ; then
            warn "Could not set maximum file descriptor limit: $MAX_FD"
        fi
    else
        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
    fi
fi

# For Darwin, add options to specify how the application appears in the dock
if $darwin; then
    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`

    # We build the pattern for arguments to be converted via cygpath
    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
    SEP=""
    for dir in $ROOTDIRSRAW ; do
        ROOTDIRS="$ROOTDIRS$SEP$dir"
        SEP="|"
    done
    OURCYGPATTERN="(^($ROOTDIRS))"
    # Add a user-defined pattern to the cygpath arguments
    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
    fi
    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    i=0
    for arg in "$@" ; do
        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option

        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
        else
            eval `echo args$i`="\"$arg\""
        fi
        i=$((i+1))
    done
    case $i in
        (0) set -- ;;
        (1) set -- "$args0" ;;
        (2) set -- "$args0" "$args1" ;;
        (3) set -- "$args0" "$args1" "$args2" ;;
        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
    esac
fi

# Split up the JVM_OPTS And ZIPKIN_COLLECTOR_SERVICE_OPTS values into an array, following the shell quoting and substitution rules
function splitJvmOpts() {
    JVM_OPTS=("$@")
}
eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $ZIPKIN_COLLECTOR_SERVICE_OPTS


exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" com.twitter.zipkin.collector.Main "$@"
