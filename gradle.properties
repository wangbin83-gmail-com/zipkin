version=1.2.0-SNAPSHOT
group=com.twitter.zipkin

# The gradle daemon increases performance and allows control of memory args.
org.gradle.daemon=true
# Memory args must be set in context of Travis limits, or the build gets killed.
#
# When solving this, bear in mind there's more overhead than just heap.
# limit 4GB > max heap + max meta + (threadcount * stacksize) + overhead
#
# Args are optimized for Java 7, as Java 8 doesn't tend to run out of meta space.
org.gradle.jvmargs=-XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xms2G -Xmx2G -Xss512k -XX:MaxPermSize=256m

# configKey applies to zipkin-(collector|query)-service
#
# configKey is a partial path to a scala file, and primarily configures span
# storage. For example, the query service would apply this to the expression
# "zipkin-query-service/config/query-${configKey}.scala"
#
# "dev" indicates AnormDB span storage, backed by a shared sqlite file.
# Other values include, but aren't limited to "redis" and "cassandra"
configKey = dev

# dbEngine applies to zipkin-(collector|query)-service when config == dev
#
# dbEngine names ending in "-persistent" need to share db files. Since these
# files are created in the current working directory, query and collector need
# to start in the same directory.
#
# Other values are sqlite-memory, h2-memory, h2-persistent, postgresql, mysql
dbEngine = sqlite-persistent
